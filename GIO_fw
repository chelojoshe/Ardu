

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

/*Libraries ofr ble*/
#include <boards.h>
#include <RBL_nRF8001.h>
#include <services.h>


// If using software SPI (the default case):
#define OLED_MOSI   9
#define OLED_CLK   10
#define OLED_DC    11
#define OLED_CS    12
#define OLED_RESET 13
Adafruit_SSD1306 display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);

/*define pins at blend micro*/
#define DIGITAL_OUT_PIN    2
#define STRIP_IN           A1
#define BUZZER              3
#define GLUCO              A0
uint16_t glucoValue = 0;

#define NUMFLAKES 10
#define XPOS 0
#define YPOS 1
#define DELTAY 2

#define LOGO16_GLCD_HEIGHT 16 
#define LOGO16_GLCD_WIDTH  16 

#if (SSD1306_LCDHEIGHT != 32)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif

void setup()   {                
  Serial.begin(57600);
  ble_begin();
  // by default, we'll generate the high voltage from the 3.3v line internally! (neat!)
  display.begin(SSD1306_SWITCHCAPVCC);
  // init display show company name
  scrolltext();
  stripInsert();
  
  pinMode(DIGITAL_OUT_PIN, OUTPUT);
  pinMode(STRIP_IN, INPUT);
  // Default to internally pull high, change it if you need
  digitalWrite(STRIP_IN, HIGH);
  
}


void loop() {
  
  static boolean analog_enabled = false;
  static byte old_state = LOW;
  glucoValue = analogRead(GLUCO);
  glucoRead();
  // 
  // If data is ready broadcast ble
  while(ble_available())
  {
    // read out command and data
    byte data0 = ble_read();
    byte data1 = ble_read();
    byte data2 = ble_read();
    
    if (data0 == 0x01)  // Command is to control digital out pin
    {
      if (data1 == 0x01)
        digitalWrite(DIGITAL_OUT_PIN, HIGH);
      else
        digitalWrite(DIGITAL_OUT_PIN, LOW);
    }
    else if (data0 == 0xA0) // Command is to enable analog in reading //10100000
    {
      if (data1 == 0x01)
        analog_enabled = true;
      else
        analog_enabled = false;
    }
    else if (data0 == 0x02) // Command is to control PWM pin //10
    {
      analogWrite(BUZZER, data1);
    }
    
    else if (data0 == 0x04)
    {
      analog_enabled = false;
      analogWrite(BUZZER, 0);
      digitalWrite(DIGITAL_OUT_PIN, LOW);
    }
  }
  
  if (analog_enabled)  // if analog reading enabled
  {
    // Read and send out
    glucoValue = analogRead(GLUCO); 
    ble_write(0x0B);
    ble_write(glucoValue >> 8);
    ble_write(glucoValue);
  }
  
   // If digital in changes, report the state
  if (digitalRead(STRIP_IN) != old_state)
  {
    old_state = digitalRead(STRIP_IN);
    
    if (digitalRead(STRIP_IN) == HIGH)
    {
      ble_write(0x0A);
      ble_write(0x00);
      ble_write(0x00);    
    }
    else
    {
      ble_write(0x0A);
      ble_write(0x01);
      ble_write(0x00);
    }
  }
  
  if (!ble_connected())
  {
    analog_enabled = false;
    digitalWrite(DIGITAL_OUT_PIN, LOW);
  }
  
  // Allow BLE Shield to send/receive data
  ble_do_events();  
  
}

    void scrolltext(void) {
      
      display.setTextSize(1);
      display.setTextColor(WHITE);
      display.setCursor(0,3);
      display.clearDisplay();
      display.println("Line HealthCare");
      display.display();
      display.setCursor(25,14);
      display.println("Design");
      display.display();
      display.startscrollright(0x00, 0x0F);
      delay(4800);
      display.stopscroll(); 
      display.clearDisplay();
      display.println("");
      display.display();
      display.clearDisplay();
    }

    void stripInsert(void){
    
    // text display tests
      display.setTextSize(1);
      display.setTextColor(WHITE);
      display.setCursor(44,5);
      display.println("Insert");
      display.display();
      display.setTextSize(1);
      display.setTextColor(WHITE);
      display.setCursor(48,18);
      display.println("Strip");
      display.display();
      display.clearDisplay();
      delay(1500);
      display.clearDisplay();
      display.setTextSize(1);
      display.setTextColor(WHITE);
      display.setCursor(22,18);
      display.println("");
      display.display();
      display.clearDisplay();
    }
    
    void stripInserted(void){
    
    // text display tests
      display.setTextSize(1);
      display.setTextColor(WHITE);
      display.setCursor(34,0);
      display.println("Strip");
      display.display();
      display.setTextSize(1);
      display.setTextColor(WHITE);
      display.setCursor(22,18);
      display.println("Inserted");
      display.display();
      delay(500);
      display.clearDisplay();
      
    }
    
    void glucoRead(void){
      int flag = 0;
     // glucoValue = analogRead(GLUCO); 
     
     
       if (digitalRead(STRIP_IN) == LOW && glucoValue == 0)
       {
           //stripInserted();
       }
      
       else if (digitalRead(STRIP_IN) == LOW && glucoValue < 50)
       {
          //stripInserted();
          display.setTextSize(1);
          display.setTextColor(WHITE);
          display.setCursor(14,10);
          display.println("Take Blood sample");
          display.display();
          display.clearDisplay();
      }
      
      else if (digitalRead(STRIP_IN) == LOW  && glucoValue > 100  && glucoValue < 500)
      {
          flag = 1;
          
         
          display.setTextSize(2);
          display.setTextColor(WHITE);
          display.setCursor(34,10);
          display.println(glucoValue);
          display.setTextSize(1);
          display.setTextColor(WHITE);
          display.setCursor(75,10);
          display.println("mmol/l");
          display.display();
          display.clearDisplay();
      
      }
      
      else if (digitalRead(STRIP_IN) == LOW  && glucoValue >= 500)
      {
        flag = 0;
          display.setTextSize(1);
          display.setTextColor(WHITE);
          display.setCursor(20,10);
          display.println("Processing...");
          display.display();
          display.clearDisplay();
          
      }
      else if (digitalRead(STRIP_IN) == HIGH){
        writeNothing();
        flag = 0;
      }  
      
    }
    
    void writeNothing(){
      
      display.setTextSize(2);
      display.setTextColor(WHITE);
      display.setCursor(34,0);
      display.println("");
      display.display();
      display.clearDisplay();
    }
    
    void RemoveStrip(void){
    
    // text display tests
      display.setTextSize(1);
      display.setTextColor(WHITE);
      display.setCursor(34,0);
      display.println("Remove Strip");
      display.display();
      display.clearDisplay();
      
    }
